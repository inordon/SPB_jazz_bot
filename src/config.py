import os
from typing import List
from dataclasses import dataclass
from dotenv import load_dotenv

load_dotenv()

@dataclass
class Config:
    # Telegram Bot –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    BOT_TOKEN: str = os.getenv("BOT_TOKEN")

    # –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö
    DB_HOST: str = os.getenv("DB_HOST", "localhost")
    DB_PORT: int = int(os.getenv("DB_PORT", "5432"))
    DB_NAME: str = os.getenv("DB_NAME", "festival_bot")
    DB_USER: str = os.getenv("DB_USER", "postgres")
    DB_PASSWORD: str = os.getenv("DB_PASSWORD", "password")

    # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    ADMIN_IDS: List[int] = [int(x) for x in os.getenv("ADMIN_IDS", "").split(",") if x]
    SUPPORT_STAFF_IDS: List[int] = [int(x) for x in os.getenv("SUPPORT_STAFF_IDS", "").split(",") if x]

    # –ö–∞–Ω–∞–ª—ã –∏ –≥—Ä—É–ø–ø—ã
    SUPPORT_GROUP_ID: str = os.getenv("SUPPORT_GROUP_ID")
    SUPPORT_GROUP_TOPICS: bool = os.getenv("SUPPORT_GROUP_TOPICS", "true").lower() == "true"
    FEEDBACK_CHANNEL_ID: str = os.getenv("FEEDBACK_CHANNEL_ID")

    # Email –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    SMTP_SERVER: str = os.getenv("SMTP_SERVER", "smtp.gmail.com")
    SMTP_PORT: int = int(os.getenv("SMTP_PORT", "587"))
    EMAIL_USER: str = os.getenv("EMAIL_USER")
    EMAIL_PASSWORD: str = os.getenv("EMAIL_PASSWORD")
    SUPPORT_EMAIL: str = os.getenv("SUPPORT_EMAIL")

    # –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏
    SOCIAL_LINKS = {
        "Instagram": "https://instagram.com/festival",
        "VK": "https://vk.com/festival",
        "Telegram": "https://t.me/festival_channel",
        "YouTube": "https://youtube.com/festival",
        "Spotify": "https://open.spotify.com/festival"
    }

    # –ë–∏–ª–µ—Ç—ã
    TICKET_PURCHASE_URL: str = os.getenv("TICKET_PURCHASE_URL", "https://tickets.festival.com")

    # –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç—ã –º–∞—Ä—à—Ä—É—Ç—ã
    YANDEX_MAPS_BASE_URL = "https://yandex.ru/maps/?rtext="

    # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ñ–µ—Å—Ç–∏–≤–∞–ª—è (–æ—Å–Ω–æ–≤–Ω–∞—è —Ç–æ—á–∫–∞)
    FESTIVAL_COORDINATES = os.getenv("FESTIVAL_COORDINATES", "55.7558,37.6176")  # –®–∏—Ä–æ—Ç–∞, –¥–æ–ª–≥–æ—Ç–∞

    # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–ª—é—á–µ–≤—ã—Ö —Ç–æ—á–µ–∫ —Ñ–µ—Å—Ç–∏–≤–∞–ª—è
    LOCATIONS_COORDINATES = {
        "foodcourt": os.getenv("FOODCOURT_COORDINATES", "55.7562,37.6174"),      # –§—É–¥–∫–æ—Ä—Ç
        "workshops": os.getenv("WORKSHOPS_COORDINATES", "55.7556,37.6182"),      # –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã
        "souvenirs": os.getenv("SOUVENIRS_COORDINATES", "55.7560,37.6170"),      # –°—É–≤–µ–Ω–∏—Ä—ã
        "toilets": os.getenv("TOILETS_COORDINATES", "55.7559,37.6178"),          # –¢—É–∞–ª–µ—Ç—ã
        "medical": os.getenv("MEDICAL_COORDINATES", "55.7558,37.6176"),          # –ú–µ–¥–ø—É–Ω–∫—Ç
    }

    # –ü—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –∫–∞—Ä—Ç
    MAPS_IMAGES_PATH: str = os.getenv("MAPS_IMAGES_PATH", "images/")

    # –ü—É—Ç–∏ –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º –∫–∞—Ä—Ç
    MAPS_IMAGES = {
        "festival_map": os.path.join(os.getenv("MAPS_IMAGES_PATH", "images/"), "festival_map.jpg"),
        "foodcourt": os.path.join(os.getenv("MAPS_IMAGES_PATH", "images/"), "foodcourt_map.jpg"),
        "workshops": os.path.join(os.getenv("MAPS_IMAGES_PATH", "images/"), "workshops_map.jpg"),
        "souvenirs": os.path.join(os.getenv("MAPS_IMAGES_PATH", "images/"), "souvenirs_map.jpg"),
        "toilets": os.path.join(os.getenv("MAPS_IMAGES_PATH", "images/"), "toilets_map.jpg"),
        "medical": os.path.join(os.getenv("MAPS_IMAGES_PATH", "images/"), "medical_map.jpg")
    }

    # Rate limiting –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    RATE_LIMIT_SETTINGS = {
        "message_timeout_seconds": 5,           # –¢–∞–π–º–∞—É—Ç –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ (—Å–µ–∫—É–Ω–¥—ã)
        "hourly_message_limit": 20,             # –õ–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Å
        "daily_message_limit": 100,             # –õ–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–µ–Ω—å
        "spam_block_duration_hours": 1,         # –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∑–∞ —Å–ø–∞–º (—á–∞—Å—ã)
        "daily_block_duration_hours": 24        # –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω–µ–≤–Ω–æ–π –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ (—á–∞—Å—ã)
    }

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    SUPPORT_SETTINGS = {
        "max_tickets_per_user": 5,              # –ú–∞–∫—Å–∏–º—É–º –æ—Ç–∫—Ä—ã—Ç—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        "auto_close_days": 7,                   # –ê–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∏–∫–µ—Ç–æ–≤ (–¥–Ω–∏)
        "urgent_response_hours": 2,             # –ß–∞—Å—ã –¥–ª—è –ø–æ–º–µ—Ç–∫–∏ —Ç–∏–∫–µ—Ç–∞ –∫–∞–∫ "—Å—Ä–æ—á–Ω—ã–π"
        "max_message_length": 4000,             # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        "min_message_length": 10,               # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        "allowed_file_types": [                 # –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã —Ñ–∞–π–ª–æ–≤
            "photo", "document", "video", "audio"
        ],
        "max_file_size_mb": 20                  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞ (–ú–ë)
    }

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    MONITORING_SETTINGS = {
        "health_check_interval_minutes": 5,     # –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è (–º–∏–Ω—É—Ç—ã)
        "log_retention_days": 30,               # –•—Ä–∞–Ω–µ–Ω–∏–µ –ª–æ–≥–æ–≤ (–¥–Ω–∏)
        "stats_retention_days": 365,            # –•—Ä–∞–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ (–¥–Ω–∏)
        "backup_interval_hours": 24,            # –ò–Ω—Ç–µ—Ä–≤–∞–ª —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è (—á–∞—Å—ã)
        "alert_admins_on_errors": True,         # –£–≤–µ–¥–æ–º–ª—è—Ç—å –∞–¥–º–∏–Ω–æ–≤ –æ–± –æ—à–∏–±–∫–∞—Ö
        "max_error_notifications_per_hour": 5   # –ú–∞–∫—Å–∏–º—É–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö –≤ —á–∞—Å
    }

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    SECURITY_SETTINGS = {
        "enable_rate_limiting": True,           # –í–∫–ª—é—á–∏—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏
        "enable_spam_detection": True,          # –í–∫–ª—é—á–∏—Ç—å –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ —Å–ø–∞–º–∞
        "block_suspicious_users": True,         # –ë–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        "log_all_actions": True,                # –õ–æ–≥–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è
        "require_email_verification": False,    # –¢—Ä–µ–±–æ–≤–∞—Ç—å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é email
        "max_login_attempts": 5,                # –ú–∞–∫—Å–∏–º—É–º –ø–æ–ø—ã—Ç–æ–∫ –≤—Ö–æ–¥–∞
        "blacklisted_words": [                  # –ß–µ—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤
            "spam", "casino", "viagra", "bitcoin"
        ]
    }

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    NOTIFICATION_SETTINGS = {
        "notify_admins_new_tickets": True,      # –£–≤–µ–¥–æ–º–ª—è—Ç—å –∞–¥–º–∏–Ω–æ–≤ –æ –Ω–æ–≤—ã—Ö —Ç–∏–∫–µ—Ç–∞—Ö
        "notify_admins_urgent_tickets": True,   # –£–≤–µ–¥–æ–º–ª—è—Ç—å –æ–± —Å—Ä–æ—á–Ω—ã—Ö —Ç–∏–∫–µ—Ç–∞—Ö
        "notify_admins_system_errors": True,    # –£–≤–µ–¥–æ–º–ª—è—Ç—å –æ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –æ—à–∏–±–∫–∞—Ö
        "notify_admins_high_load": True,        # –£–≤–µ–¥–æ–º–ª—è—Ç—å –æ –≤—ã—Å–æ–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–µ
        "daily_stats_report": True,             # –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ
        "weekly_summary_report": True           # –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è —Å–≤–æ–¥–∫–∞
    }

    # –¢–µ–∫—Å—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã
    TEXT_TEMPLATES = {
        "welcome_message": """
üéµ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –ú—É–∑—ã–∫–∞–ª—å–Ω—ã–π –§–µ—Å—Ç–∏–≤–∞–ª—å!

–ü—Ä–∏–≤–µ—Ç, {user_name}! üëã

–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ:
‚Ä¢ üìÖ –£–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏–π
‚Ä¢ üó∫ –ù–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–µ –º–µ—Å—Ç–∞ –Ω–∞ —Ñ–µ—Å—Ç–∏–≤–∞–ª–µ
‚Ä¢ üé´ –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–∏–ª–µ—Ç–∞—Ö
‚Ä¢ üé® –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã
‚Ä¢ üÜò –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π
‚Ä¢ üí≠ –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤

–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –≤ –º–µ–Ω—é –Ω–∏–∂–µ ‚¨áÔ∏è
        """,

        "support_confirmation": """
‚úÖ –í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ #{ticket_id} –ø—Ä–∏–Ω—è—Ç–æ!

‚è± –ú—ã –æ—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 2 —á–∞—Å–æ–≤.
üì± –û—Ç–≤–µ—Ç –ø—Ä–∏–¥–µ—Ç –ø—Ä—è–º–æ –≤ —ç—Ç–æ—Ç –±–æ—Ç.
üîî –í–∫–ª—é—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –æ—Ç–≤–µ—Ç!

üí¨ –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è - –æ–Ω–∏ –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –∫ —ç—Ç–æ–º—É –æ–±—Ä–∞—â–µ–Ω–∏—é.
        """,

        "rate_limit_warning": """
‚è≥ {reason}

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ {wait_seconds} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
        """,

        "ticket_closed_message": """
‚úÖ –û–±—Ä–∞—â–µ–Ω–∏–µ #{ticket_id} –∑–∞–∫—Ä—ã—Ç–æ

–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—â–µ–Ω–∏–µ! 
–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –Ω–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã, —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ.

üåü –û—Ü–µ–Ω–∏—Ç–µ –Ω–∞—à—É —Ä–∞–±–æ—Ç—É –≤ —Ä–∞–∑–¥–µ–ª–µ "üí≠ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å"
        """,

        "feedback_thanks": """
‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!

üìä –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}
üåü –û—Ü–µ–Ω–∫–∞: {stars} ({rating}/5)
üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: {has_comment}

–í–∞—à–µ –º–Ω–µ–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º —Å—Ç–∞—Ç—å –ª—É—á—à–µ! üôè
        """
    }

    # Emoji –∏ —Å–∏–º–≤–æ–ª—ã
    EMOJIS = {
        "success": "‚úÖ",
        "error": "‚ùå",
        "warning": "‚ö†Ô∏è",
        "info": "‚ÑπÔ∏è",
        "loading": "‚è≥",
        "admin": "üë®‚Äçüíº",
        "support": "üßë‚Äçüíº",
        "user": "üë§",
        "urgent": "üö®",
        "closed": "üîí",
        "open": "üîì",
        "new": "üÜï",
        "star": "‚≠ê",
        "fire": "üî•",
        "rocket": "üöÄ",
        "heart": "‚ù§Ô∏è"
    }

    @classmethod
    def get_yandex_route_url(cls, destination_coords: str, start_coords: str = None) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è URL –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–∞ –≤ –Ø–Ω–¥–µ–∫—Å.–ö–∞—Ä—Ç–∞—Ö"""
        if not start_coords:
            start_coords = cls.FESTIVAL_COORDINATES
        return f"{cls.YANDEX_MAPS_BASE_URL}{start_coords}~{destination_coords}&rtt=auto"

    def get_database_url(self) -> str:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ URL –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
        return f"postgresql://{self.DB_USER}:{self.DB_PASSWORD}@{self.DB_HOST}:{self.DB_PORT}/{self.DB_NAME}"

    def validate_config(self) -> bool:
        """–í–∞–ª–∏–¥–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        errors = []

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        if not self.BOT_TOKEN:
            errors.append("BOT_TOKEN is required")

        if not self.DB_PASSWORD:
            errors.append("DB_PASSWORD is required")

        if not self.ADMIN_IDS:
            errors.append("At least one ADMIN_ID is required")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ email –Ω–∞—Å—Ç—Ä–æ–µ–∫ (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω—ã)
        if self.EMAIL_USER and not self.EMAIL_PASSWORD:
            errors.append("EMAIL_PASSWORD is required when EMAIL_USER is set")

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥—Ä—É–ø–ø –∏ –∫–∞–Ω–∞–ª–æ–≤
        if self.SUPPORT_GROUP_ID and not self.SUPPORT_GROUP_ID.startswith('-'):
            errors.append("SUPPORT_GROUP_ID should start with '-'")

        if self.FEEDBACK_CHANNEL_ID and not self.FEEDBACK_CHANNEL_ID.startswith('-'):
            errors.append("FEEDBACK_CHANNEL_ID should start with '-'")

        if errors:
            print("Configuration errors:")
            for error in errors:
                print(f"  - {error}")
            return False

        return True

    def get_admin_usernames(self) -> List[str]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ username –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (–µ—Å–ª–∏ –∏–∑–≤–µ—Å—Ç–Ω—ã)"""
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –º–∞–ø–ø–∏–Ω–≥ ID -> username –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
        admin_usernames = {
            # –ü—Ä–∏–º–µ—Ä: 123456789: "@admin_user"
        }
        return [admin_usernames.get(admin_id, f"ID:{admin_id}") for admin_id in self.ADMIN_IDS]

    def get_support_staff_usernames(self) -> List[str]:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ username —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø–æ–¥–¥–µ—Ä–∂–∫–∏"""
        staff_usernames = {
            # –ü—Ä–∏–º–µ—Ä: 111222333: "@support_user"
        }
        return [staff_usernames.get(staff_id, f"ID:{staff_id}") for staff_id in self.SUPPORT_STAFF_IDS]

    def is_admin(self, user_id: int) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º"""
        return user_id in self.ADMIN_IDS

    def is_support_staff(self, user_id: int) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º –ø–æ–¥–¥–µ—Ä–∂–∫–∏"""
        return user_id in self.SUPPORT_STAFF_IDS

    def has_support_access(self, user_id: int) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ—Å—Ç—É–ø –∫ –ø–æ–¥–¥–µ—Ä–∂–∫–µ"""
        return self.is_admin(user_id) or self.is_support_staff(user_id)

    def get_user_role(self, user_id: int) -> str:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        if self.is_admin(user_id):
            return "admin"
        elif self.is_support_staff(user_id):
            return "support"
        else:
            return "user"

    def get_formatted_template(self, template_name: str, **kwargs) -> str:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞"""
        template = self.TEXT_TEMPLATES.get(template_name, "")
        try:
            return template.format(**kwargs)
        except KeyError as e:
            print(f"Missing template variable: {e}")
            return template

    def get_rate_limit_config(self) -> dict:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ rate limiting"""
        return self.RATE_LIMIT_SETTINGS

    def get_support_config(self) -> dict:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∏"""
        return self.SUPPORT_SETTINGS

    def get_monitoring_config(self) -> dict:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
        return self.MONITORING_SETTINGS

    def get_security_config(self) -> dict:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"""
        return self.SECURITY_SETTINGS

    def get_notification_config(self) -> dict:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
        return self.NOTIFICATION_SETTINGS

    @property
    def debug_mode(self) -> bool:
        """–†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏"""
        return os.getenv("DEBUG", "false").lower() == "true"

    @property
    def log_level(self) -> str:
        """–£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è"""
        return os.getenv("LOG_LEVEL", "INFO").upper()

    @property
    def environment(self) -> str:
        """–û–∫—Ä—É–∂–µ–Ω–∏–µ (development, staging, production)"""
        return os.getenv("ENVIRONMENT", "development").lower()

    def __post_init__(self):
        """–ü–æ—Å—Ç-–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
        # –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–∞
        if not self.validate_config():
            raise ValueError("Invalid configuration")

        # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        import pathlib
        pathlib.Path("logs").mkdir(exist_ok=True)
        pathlib.Path("backups").mkdir(exist_ok=True)
        pathlib.Path(self.MAPS_IMAGES_PATH).mkdir(exist_ok=True)

# –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
config = Config()

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ
if __name__ == "__main__":
    if config.validate_config():
        print("‚úÖ Configuration is valid")
        print(f"üìä Environment: {config.environment}")
        print(f"üîç Debug mode: {config.debug_mode}")
        print(f"üìù Log level: {config.log_level}")
        print(f"üë• Admins: {len(config.ADMIN_IDS)}")
        print(f"üßë‚Äçüíº Support staff: {len(config.SUPPORT_STAFF_IDS)}")
        print(f"üíæ Database: {config.DB_HOST}:{config.DB_PORT}/{config.DB_NAME}")
        print(f"üìß Email configured: {'Yes' if config.EMAIL_USER else 'No'}")
        print(f"üè™ Support group: {'Yes' if config.SUPPORT_GROUP_ID else 'No'}")
        print(f"üì¢ Feedback channel: {'Yes' if config.FEEDBACK_CHANNEL_ID else 'No'}")
    else:
        print("‚ùå Configuration validation failed")
        exit(1)