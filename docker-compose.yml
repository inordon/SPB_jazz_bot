version: '3.8'

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: festival_bot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - festival_network

  bot:
    build: .
    depends_on:
      - postgres
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: festival_bot
      DB_USER: postgres
      DB_PASSWORD: password
      ADMIN_IDS: ${ADMIN_IDS}
      SUPPORT_STAFF_IDS: ${SUPPORT_STAFF_IDS}
      SUPPORT_GROUP_ID: ${SUPPORT_GROUP_ID}
      SUPPORT_GROUP_TOPICS: ${SUPPORT_GROUP_TOPICS:-true}
      FEEDBACK_CHANNEL_ID: ${FEEDBACK_CHANNEL_ID}
      SMTP_SERVER: ${SMTP_SERVER:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      SUPPORT_EMAIL: ${SUPPORT_EMAIL}
      TICKET_PURCHASE_URL: ${TICKET_PURCHASE_URL:-https://tickets.festival.com}
      MAPS_IMAGES_PATH: /app/images/
      FESTIVAL_COORDINATES: ${FESTIVAL_COORDINATES:-55.7558,37.6176}
    volumes:
      - ./logs:/app/logs
      - ./images:/app/images
      - ./backups:/app/backups
    restart: unless-stopped
    networks:
      - festival_network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - bot
    restart: unless-stopped
    networks:
      - festival_network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - festival_network

volumes:
  postgres_data:
  redis_data:

networks:
  festival_network:
    driver: bridge