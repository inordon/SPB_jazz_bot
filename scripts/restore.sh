cat > scripts/restore.sh << 'EOF'
#!/bin/bash
set -e

if [ -z "$1" ]; then
    echo "‚ùå Usage: $0 <backup_file.tar.gz>"
    exit 1
fi

BACKUP_FILE="$1"
if [ ! -f "$BACKUP_FILE" ]; then
    echo "‚ùå Backup file not found: $BACKUP_FILE"
    exit 1
fi

echo "üîÑ Starting restore process from: $BACKUP_FILE"

# –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
TEMP_DIR="/tmp/restore_$(date +%s)"
mkdir -p "$TEMP_DIR"

# –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
echo "üì¶ Extracting backup..."
tar -xzf "$BACKUP_FILE" -C "$TEMP_DIR"

# –ü–æ–∏—Å–∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å –±—ç–∫–∞–ø–æ–º
BACKUP_DIR=$(find "$TEMP_DIR" -type d -name "backup_*" | head -1)
if [ -z "$BACKUP_DIR" ]; then
    echo "‚ùå Invalid backup archive structure"
    rm -rf "$TEMP_DIR"
    exit 1
fi

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
if [ -f "$BACKUP_DIR/database.sql" ]; then
    echo "üíæ Restoring database..."
    PGPASSWORD="${DB_PASSWORD}" psql \
        -h "${DB_HOST:-postgres}" \
        -p "${DB_PORT:-5432}" \
        -U "${DB_USER:-festival_user}" \
        -d "${DB_NAME:-festival_bot}" \
        < "$BACKUP_DIR/database.sql"
fi

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if [ -d "$BACKUP_DIR/config" ]; then
    echo "‚öôÔ∏è Restoring configuration..."
    cp -r "$BACKUP_DIR/config/"* /app/config/ 2>/dev/null || true
fi

# –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
if [ -d "$BACKUP_DIR/images" ]; then
    echo "üñºÔ∏è Restoring images..."
    cp -r "$BACKUP_DIR/images/"* /app/images/ 2>/dev/null || true
fi

# –û—á–∏—Å—Ç–∫–∞
rm -rf "$TEMP_DIR"

echo "‚úÖ Restore completed successfully!"
EOF