cat > scripts/logs.sh << 'EOF'
#!/bin/bash

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ–Ω—é
show_menu() {
    echo "üìã Festival Bot Logs"
    echo "==================="
    echo "1) Bot logs (main)"
    echo "2) Error logs"
    echo "3) Support logs"
    echo "4) Stats logs"
    echo "5) All logs (live)"
    echo "6) Clear all logs"
    echo "q) Quit"
    echo
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –ª–æ–≥–æ–≤
clear_logs() {
    read -p "‚ö†Ô∏è Are you sure you want to clear all logs? [y/N]: " confirm
    if [[ $confirm =~ ^[Yy]$ ]]; then
        rm -f /app/logs/*.log
        echo "‚úÖ All logs cleared!"
    else
        echo "‚ùå Operation cancelled."
    fi
}

while true; do
    show_menu
    read -p "Choose option: " choice

    case $choice in
        1)
            echo "üìÑ Bot logs:"
            tail -f /app/logs/bot.log 2>/dev/null || echo "No bot logs found"
            ;;
        2)
            echo "‚ùå Error logs:"
            tail -f /app/logs/errors.log 2>/dev/null || echo "No error logs found"
            ;;
        3)
            echo "üÜò Support logs:"
            tail -f /app/logs/support.log 2>/dev/null || echo "No support logs found"
            ;;
        4)
            echo "üìä Stats logs:"
            tail -f /app/logs/stats.log 2>/dev/null || echo "No stats logs found"
            ;;
        5)
            echo "üìã All logs (live):"
            tail -f /app/logs/*.log 2>/dev/null || echo "No logs found"
            ;;
        6)
            clear_logs
            ;;
        q|Q)
            echo "üëã Goodbye!"
            exit 0
            ;;
        *)
            echo "‚ùå Invalid option"
            ;;
    esac

    echo
    read -p "Press Enter to continue..."
    clear
done
EOF